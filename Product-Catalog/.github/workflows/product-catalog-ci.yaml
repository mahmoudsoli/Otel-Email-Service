#Product Catalog CI
name: Product Catalog CI

on:
  workflow_dispatch:

jobs:
    Code-Quality:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            
            - name: Set up Go 
              uses: actions/setup-go@v5
              with:
                    go-version: '1.22.7' 
            
            - name: golangci-lint
              uses: golangci/golangci-lint-action@v8
              with:
                version: v2.1
                working-directory: ./src
            
            - name: Run tests
              run: |
                golangci-lint run ./...
              working-directory: ./src
    
    Unit-Tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            
            - name: Set up Go 
              uses: actions/setup-go@v5
              with:
                    go-version: '1.22.7' 
            
            - name: Install dependencies
              run: |
                go mod download
              working-directory: ./src

            - name: Build
              run: go build -o product-catalog-service main.go
              working-directory: ./src
        
            - name: Unit Test
              run: |
                go test ./...
              working-directory: ./src

    scan-with-gitleaks:
        name: gitleaks
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - uses: gitleaks/gitleaks-action@v2
          env:
            GITHUB_TOKEN: ${{ secrets.PRODUCT_TOKEN }}
    
    Build-with-Docker:
        runs-on: ubuntu-latest
        needs: scan-with-gitleaks
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            
            - name: Build Docker image
              uses: docker/build-push-action@v4
              with:
                context: ./src
                file: ./src/Dockerfile
                push: false
                tags: ${{ secrets.DOCKER_USERNAME }}/product-catalog-service:${{ github.run_id }}
                load: true
            
            - name: Scan Docker image with Trivy
              uses: aquasecurity/trivy-action@0.28.0
              with:
                image-ref: ${{ secrets.DOCKER_USERNAME }}/product-catalog-service:${{ github.run_id }}
                format: 'table'
                exit-code: 1
                ignore-unfixed: true
                severity: 'HIGH,CRITICAL'
            
            - name: Push Docker image
              if: success()
              uses: docker/build-push-action@v4
              with:
                context: ./src
                file: ./src/Dockerfile
                push: true
                tags: ${{ secrets.DOCKER_USERNAME }}/product-catalog-service:${{ github.run_id }}
    
    Update-Github-Deployment:
        runs-on: ubuntu-latest
        needs: Build-with-Docker
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
              
            - name: Update k8s deployment file
              run: |
                sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/product-catalog-service:${{ github.run_id }}|" K8S/deployment.yaml
            
            - name: Commit changes
              run: |
                git config --global user.email "mahmoudsoliman427@gmail.com"
                git config --global user.name "mahmoudsoli"
                git add K8S/deployment.yaml
                git commit -m "[CI] Update deployment image"
                git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/mahmoudsoli/ITI-Product-Catalog.git HEAD:master -f
