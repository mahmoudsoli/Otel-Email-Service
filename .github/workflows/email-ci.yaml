#Email Service CI 
name: Email Service CI 

on:
    pull_request:
        branches:
            - master
    workflow_dispatch:

jobs:
    Code-Quality:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./src
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up Ruby
              uses: ruby/setup-ruby-pkgs@v1
              with:
                    ruby-version: 3.2.2     
                    bundler:   2.4.0 
                    bundler-cache: true            
                
            - name: Install & Run RuboCop and Reek
              run: |
                    bundle install
                    bundle exec rubocop
                    bundle exec reek
    
    Unit-Tests:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./src
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up Ruby
              uses: ruby/setup-ruby-pkgs@v1
              with:
                    ruby-version: 3.2.2     
                    bundler:   2.4.0 
                    bundler-cache: true            

                
            - name: Install Dependencies
              run: bundle install

            - name: Run Unit Tests with RSpec
              run: bundle exec rspec
        
    scan-with-gitleaks:
        name: gitleaks
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - uses: gitleaks/gitleaks-action@v2
          env:
            GITHUB_TOKEN: ${{ secrets.PRODUCT_TOKEN }}
    
    Dockerbuild:
        runs-on: ubuntu-latest
        needs: scan-with-gitleaks
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Login to Docker Registry
              uses: docker/login-action@v2
              with:
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build Docker image
              uses: docker/build-push-action@v4
              with:
                context: ./src
                file: ./src/Dockerfile
                push: false
                tags: ${{ secrets.DOCKER_USERNAME }}/email-service:${{ github.run_id }}
                load: true
            
            - name: Scan Docker image with Trivy
              uses: aquasecurity/trivy-action@0.28.0
              with:
                image-ref: ${{ secrets.DOCKER_USERNAME }}/email-service:${{ github.run_id }}
                format: 'table'
                exit-code: 0
                ignore-unfixed: true
                severity: 'HIGH,CRITICAL'
            
            - name: Push Docker image
              if: success()
              uses: docker/build-push-action@v4
              with:
                context: ./src
                file: ./src/Dockerfile
                push: true
                tags: ${{ secrets.DOCKER_USERNAME }}/email-service:${{ github.run_id }}

    Update-deployment-file:
        runs-on: ubuntu-latest
        needs: Dockerbuild
        steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
                token: ${{ secrets.GITHUB_TOKEN }}
          
          - name: Update k8s deployment file
            run: |
              sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/emil-service:${{ github.run_id }}|" K8S/deployment.yaml
          
          - name: Commit-and-Push
            run: |
              git config --global user.email "mahmoudsoliman427@gmail.com"
              git config --global user.name "mahmoudsoli"
              git add K8S/deployment.yaml
              git commit -m "[CI] Update deployment image"
              git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/mahmoudsoli/Otel-Email-Service.git HEAD:master -f
